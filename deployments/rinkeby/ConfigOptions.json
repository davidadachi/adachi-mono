{
  "address": "0x2E07A727c80009aFBa7A3a095A78734216bf69ab",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "addressKey",
          "type": "uint256"
        }
      ],
      "name": "getAddressName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "number",
          "type": "uint256"
        }
      ],
      "name": "getNumberName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xe71f6c54baf63c3ad2ec73bf7cd7682a7d74b03b7a741f3629c10f9d3af71b52",
  "receipt": {
    "to": null,
    "from": "0xf3c9B38c155410456b5A98fD8bBf5E35B87F6d96",
    "contractAddress": "0x2E07A727c80009aFBa7A3a095A78734216bf69ab",
    "transactionIndex": 1,
    "gasUsed": "416599",
    "logsBloom": "0x
    "blockHash": "0xd2f06c4e76cc65fb6bf5770767e5d0d6a762f4275433be196d2261e5ffd2b2d6",
    "transactionHash": "0xe71f6c54baf63c3ad2ec73bf7cd7682a7d74b03b7a741f3629c10f9d3af71b52",
    "logs": [],
    "blockNumber": 8079871,
    "cumulativeGasUsed": "464395",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "22a5afb6e5d500c7aaa1643d94cdf023",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"addressKey\",\"type\":\"uint256\"}],\"name\":\"getAddressName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"getNumberName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Goldfinch\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ConfigOptions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A central place for enumerating the configurable options of our GoldfinchConfig contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/core/ConfigOptions.sol\":\"ConfigOptions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/core/ConfigOptions.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @title ConfigOptions\\n * @notice A central place for enumerating the configurable options of our GoldfinchConfig contract\\n * @author Goldfinch\\n */\\n\\nlibrary ConfigOptions {\\n  // NEVER EVER CHANGE THE ORDER OF THESE!\\n  // You can rename or append. But NEVER change the order.\\n  enum Numbers {\\n    TransactionLimit,\\n    TotalFundsLimit,\\n    MaxUnderwriterLimit,\\n    ReserveDenominator,\\n    WithdrawFeeDenominator,\\n    LatenessGracePeriodInDays,\\n    LatenessMaxDays\\n  }\\n  enum Addresses {\\n    Pool,\\n    CreditLineImplementation,\\n    CreditLineFactory,\\n    CreditDesk,\\n    Fidu,\\n    USDC,\\n    TreasuryReserve,\\n    ProtocolAdmin,\\n    OneInch,\\n    TrustedForwarder,\\n    CUSDCContract\\n  }\\n\\n  function getNumberName(uint256 number) public pure returns (string memory) {\\n    Numbers numberName = Numbers(number);\\n    if (Numbers.TransactionLimit == numberName) {\\n      return \\\"TransactionLimit\\\";\\n    }\\n    if (Numbers.TotalFundsLimit == numberName) {\\n      return \\\"TotalFundsLimit\\\";\\n    }\\n    if (Numbers.MaxUnderwriterLimit == numberName) {\\n      return \\\"MaxUnderwriterLimit\\\";\\n    }\\n    if (Numbers.ReserveDenominator == numberName) {\\n      return \\\"ReserveDenominator\\\";\\n    }\\n    if (Numbers.WithdrawFeeDenominator == numberName) {\\n      return \\\"WithdrawFeeDenominator\\\";\\n    }\\n    if (Numbers.LatenessGracePeriodInDays == numberName) {\\n      return \\\"LatenessGracePeriodInDays\\\";\\n    }\\n    if (Numbers.LatenessMaxDays == numberName) {\\n      return \\\"LatenessMaxDays\\\";\\n    }\\n    revert(\\\"Unknown value passed to getNumberName\\\");\\n  }\\n\\n  function getAddressName(uint256 addressKey) public pure returns (string memory) {\\n    Addresses addressName = Addresses(addressKey);\\n    if (Addresses.Pool == addressName) {\\n      return \\\"Pool\\\";\\n    }\\n    if (Addresses.CreditLineImplementation == addressName) {\\n      return \\\"CreditLineImplementation\\\";\\n    }\\n    if (Addresses.CreditLineFactory == addressName) {\\n      return \\\"CreditLineFactory\\\";\\n    }\\n    if (Addresses.CreditDesk == addressName) {\\n      return \\\"CreditDesk\\\";\\n    }\\n    if (Addresses.Fidu == addressName) {\\n      return \\\"Fidu\\\";\\n    }\\n    if (Addresses.USDC == addressName) {\\n      return \\\"USDC\\\";\\n    }\\n    if (Addresses.TreasuryReserve == addressName) {\\n      return \\\"TreasuryReserve\\\";\\n    }\\n    if (Addresses.ProtocolAdmin == addressName) {\\n      return \\\"ProtocolAdmin\\\";\\n    }\\n    if (Addresses.OneInch == addressName) {\\n      return \\\"OneInch\\\";\\n    }\\n    if (Addresses.TrustedForwarder == addressName) {\\n      return \\\"TrustedForwarder\\\";\\n    }\\n    if (Addresses.CUSDCContract == addressName) {\\n      return \\\"CUSDCContract\\\";\\n    }\\n    revert(\\\"Unknown value passed to getAddressName\\\");\\n  }\\n}\\n\",\"keccak256\":\"0xc0372c8bf041258bfd55481b08afe23a3784b11b870c63d6dc7bdc57720e4642\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x610692610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80631eb7045f146100455780636152a028146100d7575b600080fd5b6100626004803603602081101561005b57600080fd5b50356100f4565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561009c578181015183820152602001610084565b50505050905090810190601f1680156100c95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610062600480360360208110156100ed57600080fd5b50356103e8565b6060600082600a81111561010457fe5b905080600a81111561011257fe5b610138575050604080518082019091526004815263141bdbdb60e21b60208201526103e3565b80600a81111561014457fe5b6001141561018757505060408051808201909152601881527f4372656469744c696e65496d706c656d656e746174696f6e000000000000000060208201526103e3565b80600a81111561019357fe5b600214156101ca5750506040805180820190915260118152704372656469744c696e65466163746f727960781b60208201526103e3565b80600a8111156101d657fe5b6003141561020657505060408051808201909152600a8152694372656469744465736b60b01b60208201526103e3565b80600a81111561021257fe5b6004141561023c5750506040805180820190915260048152634669647560e01b60208201526103e3565b80600a81111561024857fe5b600514156102725750506040805180820190915260048152635553444360e01b60208201526103e3565b80600a81111561027e57fe5b600614156102b357505060408051808201909152600f81526e54726561737572795265736572766560881b60208201526103e3565b80600a8111156102bf57fe5b600714156102f257505060408051808201909152600d81526c283937ba37b1b7b620b236b4b760991b60208201526103e3565b80600a8111156102fe57fe5b6008141561032b57505060408051808201909152600781526609edcca92dcc6d60cb1b60208201526103e3565b80600a81111561033757fe5b6009141561036d57505060408051808201909152601081526f2a393ab9ba32b22337b93bb0b93232b960811b60208201526103e3565b80600a81111561037957fe5b600a14156103ac57505060408051808201909152600d81526c10d554d110d0dbdb9d1c9858dd609a1b60208201526103e3565b60405162461bcd60e51b81526004018080602001828103825260268152602001806106126026913960400191505060405180910390fd5b919050565b606060008260068111156103f857fe5b905080600681111561040657fe5b61043857505060408051808201909152601081526f151c985b9cd858dd1a5bdb931a5b5a5d60821b60208201526103e3565b80600681111561044457fe5b6001141561047957505060408051808201909152600f81526e151bdd185b119d5b991cd31a5b5a5d608a1b60208201526103e3565b80600681111561048557fe5b600214156104be57505060408051808201909152601381527213585e155b99195c9ddc9a5d195c931a5b5a5d606a1b60208201526103e3565b8060068111156104ca57fe5b600314156105025750506040805180820190915260128152712932b9b2b93b32a232b737b6b4b730ba37b960711b60208201526103e3565b80600681111561050e57fe5b6004141561054a5750506040805180820190915260168152752bb4ba34323930bba332b2a232b737b6b4b730ba37b960511b60208201526103e3565b80600681111561055657fe5b6005141561059957505060408051808201909152601981527f4c6174656e6573734772616365506572696f64496e446179730000000000000060208201526103e3565b8060068111156105a557fe5b600614156105da57505060408051808201909152600f81526e4c6174656e6573734d61784461797360881b60208201526103e3565b60405162461bcd60e51b81526004018080602001828103825260258152602001806106386025913960400191505060405180910390fdfe556e6b6e6f776e2076616c75652070617373656420746f20676574416464726573734e616d65556e6b6e6f776e2076616c75652070617373656420746f206765744e756d6265724e616d65a264697066735822122083f7bb93e062192726014af05ab4d82a32534333a00fa6d2b0da6cc76805971f64736f6c634300060c0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80631eb7045f146100455780636152a028146100d7575b600080fd5b6100626004803603602081101561005b57600080fd5b50356100f4565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561009c578181015183820152602001610084565b50505050905090810190601f1680156100c95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610062600480360360208110156100ed57600080fd5b50356103e8565b6060600082600a81111561010457fe5b905080600a81111561011257fe5b610138575050604080518082019091526004815263141bdbdb60e21b60208201526103e3565b80600a81111561014457fe5b6001141561018757505060408051808201909152601881527f4372656469744c696e65496d706c656d656e746174696f6e000000000000000060208201526103e3565b80600a81111561019357fe5b600214156101ca5750506040805180820190915260118152704372656469744c696e65466163746f727960781b60208201526103e3565b80600a8111156101d657fe5b6003141561020657505060408051808201909152600a8152694372656469744465736b60b01b60208201526103e3565b80600a81111561021257fe5b6004141561023c5750506040805180820190915260048152634669647560e01b60208201526103e3565b80600a81111561024857fe5b600514156102725750506040805180820190915260048152635553444360e01b60208201526103e3565b80600a81111561027e57fe5b600614156102b357505060408051808201909152600f81526e54726561737572795265736572766560881b60208201526103e3565b80600a8111156102bf57fe5b600714156102f257505060408051808201909152600d81526c283937ba37b1b7b620b236b4b760991b60208201526103e3565b80600a8111156102fe57fe5b6008141561032b57505060408051808201909152600781526609edcca92dcc6d60cb1b60208201526103e3565b80600a81111561033757fe5b6009141561036d57505060408051808201909152601081526f2a393ab9ba32b22337b93bb0b93232b960811b60208201526103e3565b80600a81111561037957fe5b600a14156103ac57505060408051808201909152600d81526c10d554d110d0dbdb9d1c9858dd609a1b60208201526103e3565b60405162461bcd60e51b81526004018080602001828103825260268152602001806106126026913960400191505060405180910390fd5b919050565b606060008260068111156103f857fe5b905080600681111561040657fe5b61043857505060408051808201909152601081526f151c985b9cd858dd1a5bdb931a5b5a5d60821b60208201526103e3565b80600681111561044457fe5b6001141561047957505060408051808201909152600f81526e151bdd185b119d5b991cd31a5b5a5d608a1b60208201526103e3565b80600681111561048557fe5b600214156104be57505060408051808201909152601381527213585e155b99195c9ddc9a5d195c931a5b5a5d606a1b60208201526103e3565b8060068111156104ca57fe5b600314156105025750506040805180820190915260128152712932b9b2b93b32a232b737b6b4b730ba37b960711b60208201526103e3565b80600681111561050e57fe5b6004141561054a5750506040805180820190915260168152752bb4ba34323930bba332b2a232b737b6b4b730ba37b960511b60208201526103e3565b80600681111561055657fe5b6005141561059957505060408051808201909152601981527f4c6174656e6573734772616365506572696f64496e446179730000000000000060208201526103e3565b8060068111156105a557fe5b600614156105da57505060408051808201909152600f81526e4c6174656e6573734d61784461797360881b60208201526103e3565b60405162461bcd60e51b81526004018080602001828103825260258152602001806106386025913960400191505060405180910390fdfe556e6b6e6f776e2076616c75652070617373656420746f20676574416464726573734e616d65556e6b6e6f776e2076616c75652070617373656420746f206765744e756d6265724e616d65a264697066735822122083f7bb93e062192726014af05ab4d82a32534333a00fa6d2b0da6cc76805971f64736f6c634300060c0033",
  "devdoc": {
    "author": "Goldfinch",
    "kind": "dev",
    "methods": {},
    "title": "ConfigOptions",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "A central place for enumerating the configurable options of our GoldfinchConfig contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}