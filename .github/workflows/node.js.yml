# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '**' ]

jobs:
  autotasks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 2
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
        version: nightly
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: yarn
    - name: Changed files
      id: changed-files
      uses: tj-actions/changed-files@v11.2
      with:
        files: |
          packages\/autotasks\/.+\.ts
          packages\/autotasks\/.+\.json
          packages\/autotasks\/package\.json
          packages\/autotasks\/package\-lock\.json
          packages\/utils\/**
    - run: yarn workspaces focus @goldfinch-eng/autotasks
    - run: yarn workspaces foreach -ptR --from @goldfinch-eng/autotasks run build
      env:
        NEXT_PUBLIC_GRAPHQL_URL: https://api.thegraph.com/subgraphs/name/goldfinch-eng/goldfinch-v2
        NEXT_PUBLIC_NETWORK_NAME: mainnet
        NEXT_PUBLIC_MAINNET_RPC_URL: https://eth-mainnet.alchemyapi.io/v2/blank
    - run: yarn workspace @goldfinch-eng/autotasks test
    - name: deploy-autotasks
      env:
        AUTOTASK_API_KEY: ${{ secrets.AUTOTASK_API_KEY }}
        AUTOTASK_API_SECRET: ${{ secrets.AUTOTASK_API_SECRET }}
      run: yarn workspace @goldfinch-eng/autotasks deploy
      if: github.ref == 'refs/heads/main' && steps.changed-files.outputs.any_changed == 'true'
    - name: Create Sentry release
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: autotasks
      with:
        environment: production
        sourcemaps: packages/autotasks/unique-identity-signer/dist
        ignore_empty: true
      if: github.ref == 'refs/heads/main' && steps.changed-files.outputs.any_changed == 'true'

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
        version: nightly
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: yarn
    - run: yarn install --immutable
    - run: yarn build
      env:
        NEXT_PUBLIC_GRAPHQL_URL: https://api.thegraph.com/subgraphs/name/goldfinch-eng/goldfinch-v2
        NEXT_PUBLIC_NETWORK_NAME: mainnet
        NEXT_PUBLIC_MAINNET_RPC_URL: https://eth-mainnet.alchemyapi.io/v2/blank
    - run: yarn run lint

  functions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - name: Changed files
        id: changed-files
        uses: tj-actions/changed-files@v11.2
        with:
          files: |
            packages\/functions\/src\/.+\.ts
            packages\/functions\/scripts\/.+\.ts
            packages\/functions\/package\.json
            packages\/functions\/package\-lock\.json
            packages\/utils\/**
      - name: Cache Firestore emulator
        uses: actions/cache@v2
        env:
          cache-name: cache-firestore-emulator
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-build-v0-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: yarn workspaces focus @goldfinch-eng/functions
      - run: yarn workspaces foreach -ptR --from @goldfinch-eng/functions run build
        env:
          NEXT_PUBLIC_GRAPHQL_URL: https://api.thegraph.com/subgraphs/name/goldfinch-eng/goldfinch-v2
          NEXT_PUBLIC_NETWORK_NAME: mainnet
          NEXT_PUBLIC_MAINNET_RPC_URL: https://eth-mainnet.alchemyapi.io/v2/blank
      - run: yarn workspace @goldfinch-eng/functions ci_test
      - name: deploy-dev
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: yarn workspace @goldfinch-eng/functions exec "yarn ci_functions_config_set_dev && yarn pre-deploy && yarn firebase deploy --only functions --project dev"
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: server-functions-dev
        with:
          environment: dev
          sourcemaps: packages/functions/lib/functions
          ignore_empty: true
      - name: deploy-prod
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: yarn workspace @goldfinch-eng/functions exec "yarn ci_functions_config_set_prod && yarn pre-deploy && yarn firebase deploy --only functions --project prod"
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: server-functions-prod
        with:
          environment: production
          sourcemaps: packages/functions/lib/functions
          ignore_empty: true
