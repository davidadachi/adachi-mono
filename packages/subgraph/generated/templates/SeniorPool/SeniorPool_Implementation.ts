// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DepositMade extends ethereum.Event {
  get params(): DepositMade__Params {
    return new DepositMade__Params(this);
  }
}

export class DepositMade__Params {
  _event: DepositMade;

  constructor(event: DepositMade) {
    this._event = event;
  }

  get capitalProvider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get shares(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class InterestCollected extends ethereum.Event {
  get params(): InterestCollected__Params {
    return new InterestCollected__Params(this);
  }
}

export class InterestCollected__Params {
  _event: InterestCollected;

  constructor(event: InterestCollected) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class InvestmentMadeInJunior extends ethereum.Event {
  get params(): InvestmentMadeInJunior__Params {
    return new InvestmentMadeInJunior__Params(this);
  }
}

export class InvestmentMadeInJunior__Params {
  _event: InvestmentMadeInJunior;

  constructor(event: InvestmentMadeInJunior) {
    this._event = event;
  }

  get tranchedPool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class InvestmentMadeInSenior extends ethereum.Event {
  get params(): InvestmentMadeInSenior__Params {
    return new InvestmentMadeInSenior__Params(this);
  }
}

export class InvestmentMadeInSenior__Params {
  _event: InvestmentMadeInSenior;

  constructor(event: InvestmentMadeInSenior) {
    this._event = event;
  }

  get tranchedPool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PrincipalCollected extends ethereum.Event {
  get params(): PrincipalCollected__Params {
    return new PrincipalCollected__Params(this);
  }
}

export class PrincipalCollected__Params {
  _event: PrincipalCollected;

  constructor(event: PrincipalCollected) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PrincipalWrittenDown extends ethereum.Event {
  get params(): PrincipalWrittenDown__Params {
    return new PrincipalWrittenDown__Params(this);
  }
}

export class PrincipalWrittenDown__Params {
  _event: PrincipalWrittenDown;

  constructor(event: PrincipalWrittenDown) {
    this._event = event;
  }

  get tranchedPool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ReserveFundsCollected extends ethereum.Event {
  get params(): ReserveFundsCollected__Params {
    return new ReserveFundsCollected__Params(this);
  }
}

export class ReserveFundsCollected__Params {
  _event: ReserveFundsCollected;

  constructor(event: ReserveFundsCollected) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WithdrawalMade extends ethereum.Event {
  get params(): WithdrawalMade__Params {
    return new WithdrawalMade__Params(this);
  }
}

export class WithdrawalMade__Params {
  _event: WithdrawalMade;

  constructor(event: WithdrawalMade) {
    this._event = event;
  }

  get capitalProvider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get userAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get reserveAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SeniorPool_Implementation extends ethereum.SmartContract {
  static bind(address: Address): SeniorPool_Implementation {
    return new SeniorPool_Implementation("SeniorPool_Implementation", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OWNER_ROLE(): Bytes {
    let result = super.call("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OWNER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAUSER_ROLE(): Bytes {
    let result = super.call("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAUSER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  assets(): BigInt {
    let result = super.call("assets", "assets():(uint256)", []);

    return result[0].toBigInt();
  }

  try_assets(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("assets", "assets():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateWritedown(tokenId: BigInt): BigInt {
    let result = super.call(
      "calculateWritedown",
      "calculateWritedown(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toBigInt();
  }

  try_calculateWritedown(tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateWritedown",
      "calculateWritedown(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  compoundBalance(): BigInt {
    let result = super.call(
      "compoundBalance",
      "compoundBalance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_compoundBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "compoundBalance",
      "compoundBalance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  config(): Address {
    let result = super.call("config", "config():(address)", []);

    return result[0].toAddress();
  }

  try_config(): ethereum.CallResult<Address> {
    let result = super.tryCall("config", "config():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deposit(amount: BigInt): BigInt {
    let result = super.call("deposit", "deposit(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBigInt();
  }

  try_deposit(amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("deposit", "deposit(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  depositWithPermit(
    amount: BigInt,
    deadline: BigInt,
    v: i32,
    r: Bytes,
    s: Bytes
  ): BigInt {
    let result = super.call(
      "depositWithPermit",
      "depositWithPermit(uint256,uint256,uint8,bytes32,bytes32):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(deadline),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(v)),
        ethereum.Value.fromFixedBytes(r),
        ethereum.Value.fromFixedBytes(s)
      ]
    );

    return result[0].toBigInt();
  }

  try_depositWithPermit(
    amount: BigInt,
    deadline: BigInt,
    v: i32,
    r: Bytes,
    s: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "depositWithPermit",
      "depositWithPermit(uint256,uint256,uint8,bytes32,bytes32):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(deadline),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(v)),
        ethereum.Value.fromFixedBytes(r),
        ethereum.Value.fromFixedBytes(s)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  estimateInvestment(pool: Address): BigInt {
    let result = super.call(
      "estimateInvestment",
      "estimateInvestment(address):(uint256)",
      [ethereum.Value.fromAddress(pool)]
    );

    return result[0].toBigInt();
  }

  try_estimateInvestment(pool: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "estimateInvestment",
      "estimateInvestment(address):(uint256)",
      [ethereum.Value.fromAddress(pool)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNumShares(amount: BigInt): BigInt {
    let result = super.call("getNumShares", "getNumShares(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBigInt();
  }

  try_getNumShares(amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNumShares",
      "getNumShares(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(amount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAdmin(): boolean {
    let result = super.call("isAdmin", "isAdmin():(bool)", []);

    return result[0].toBoolean();
  }

  try_isAdmin(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAdmin", "isAdmin():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  sharePrice(): BigInt {
    let result = super.call("sharePrice", "sharePrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_sharePrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("sharePrice", "sharePrice():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalLoansOutstanding(): BigInt {
    let result = super.call(
      "totalLoansOutstanding",
      "totalLoansOutstanding():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalLoansOutstanding(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalLoansOutstanding",
      "totalLoansOutstanding():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalWritedowns(): BigInt {
    let result = super.call(
      "totalWritedowns",
      "totalWritedowns():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalWritedowns(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalWritedowns",
      "totalWritedowns():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdraw(usdcAmount: BigInt): BigInt {
    let result = super.call("withdraw", "withdraw(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(usdcAmount)
    ]);

    return result[0].toBigInt();
  }

  try_withdraw(usdcAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("withdraw", "withdraw(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(usdcAmount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawInFidu(fiduAmount: BigInt): BigInt {
    let result = super.call(
      "withdrawInFidu",
      "withdrawInFidu(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(fiduAmount)]
    );

    return result[0].toBigInt();
  }

  try_withdrawInFidu(fiduAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawInFidu",
      "withdrawInFidu(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(fiduAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  writedowns(param0: Address): BigInt {
    let result = super.call("writedowns", "writedowns(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_writedowns(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("writedowns", "writedowns(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class __BaseUpgradeablePausable__initCall extends ethereum.Call {
  get inputs(): __BaseUpgradeablePausable__initCall__Inputs {
    return new __BaseUpgradeablePausable__initCall__Inputs(this);
  }

  get outputs(): __BaseUpgradeablePausable__initCall__Outputs {
    return new __BaseUpgradeablePausable__initCall__Outputs(this);
  }
}

export class __BaseUpgradeablePausable__initCall__Inputs {
  _call: __BaseUpgradeablePausable__initCall;

  constructor(call: __BaseUpgradeablePausable__initCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class __BaseUpgradeablePausable__initCall__Outputs {
  _call: __BaseUpgradeablePausable__initCall;

  constructor(call: __BaseUpgradeablePausable__initCall) {
    this._call = call;
  }
}

export class __PauserPausable__initCall extends ethereum.Call {
  get inputs(): __PauserPausable__initCall__Inputs {
    return new __PauserPausable__initCall__Inputs(this);
  }

  get outputs(): __PauserPausable__initCall__Outputs {
    return new __PauserPausable__initCall__Outputs(this);
  }
}

export class __PauserPausable__initCall__Inputs {
  _call: __PauserPausable__initCall;

  constructor(call: __PauserPausable__initCall) {
    this._call = call;
  }
}

export class __PauserPausable__initCall__Outputs {
  _call: __PauserPausable__initCall;

  constructor(call: __PauserPausable__initCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get depositShares(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DepositWithPermitCall extends ethereum.Call {
  get inputs(): DepositWithPermitCall__Inputs {
    return new DepositWithPermitCall__Inputs(this);
  }

  get outputs(): DepositWithPermitCall__Outputs {
    return new DepositWithPermitCall__Outputs(this);
  }
}

export class DepositWithPermitCall__Inputs {
  _call: DepositWithPermitCall;

  constructor(call: DepositWithPermitCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class DepositWithPermitCall__Outputs {
  _call: DepositWithPermitCall;

  constructor(call: DepositWithPermitCall) {
    this._call = call;
  }

  get depositShares(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _config(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InvestCall extends ethereum.Call {
  get inputs(): InvestCall__Inputs {
    return new InvestCall__Inputs(this);
  }

  get outputs(): InvestCall__Outputs {
    return new InvestCall__Outputs(this);
  }
}

export class InvestCall__Inputs {
  _call: InvestCall;

  constructor(call: InvestCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InvestCall__Outputs {
  _call: InvestCall;

  constructor(call: InvestCall) {
    this._call = call;
  }
}

export class InvestJuniorCall extends ethereum.Call {
  get inputs(): InvestJuniorCall__Inputs {
    return new InvestJuniorCall__Inputs(this);
  }

  get outputs(): InvestJuniorCall__Outputs {
    return new InvestJuniorCall__Outputs(this);
  }
}

export class InvestJuniorCall__Inputs {
  _call: InvestJuniorCall;

  constructor(call: InvestJuniorCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InvestJuniorCall__Outputs {
  _call: InvestJuniorCall;

  constructor(call: InvestJuniorCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SweepFromCompoundCall extends ethereum.Call {
  get inputs(): SweepFromCompoundCall__Inputs {
    return new SweepFromCompoundCall__Inputs(this);
  }

  get outputs(): SweepFromCompoundCall__Outputs {
    return new SweepFromCompoundCall__Outputs(this);
  }
}

export class SweepFromCompoundCall__Inputs {
  _call: SweepFromCompoundCall;

  constructor(call: SweepFromCompoundCall) {
    this._call = call;
  }
}

export class SweepFromCompoundCall__Outputs {
  _call: SweepFromCompoundCall;

  constructor(call: SweepFromCompoundCall) {
    this._call = call;
  }
}

export class SweepToCompoundCall extends ethereum.Call {
  get inputs(): SweepToCompoundCall__Inputs {
    return new SweepToCompoundCall__Inputs(this);
  }

  get outputs(): SweepToCompoundCall__Outputs {
    return new SweepToCompoundCall__Outputs(this);
  }
}

export class SweepToCompoundCall__Inputs {
  _call: SweepToCompoundCall;

  constructor(call: SweepToCompoundCall) {
    this._call = call;
  }
}

export class SweepToCompoundCall__Outputs {
  _call: SweepToCompoundCall;

  constructor(call: SweepToCompoundCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateGoldfinchConfigCall extends ethereum.Call {
  get inputs(): UpdateGoldfinchConfigCall__Inputs {
    return new UpdateGoldfinchConfigCall__Inputs(this);
  }

  get outputs(): UpdateGoldfinchConfigCall__Outputs {
    return new UpdateGoldfinchConfigCall__Outputs(this);
  }
}

export class UpdateGoldfinchConfigCall__Inputs {
  _call: UpdateGoldfinchConfigCall;

  constructor(call: UpdateGoldfinchConfigCall) {
    this._call = call;
  }
}

export class UpdateGoldfinchConfigCall__Outputs {
  _call: UpdateGoldfinchConfigCall;

  constructor(call: UpdateGoldfinchConfigCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get usdcAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class WithdrawInFiduCall extends ethereum.Call {
  get inputs(): WithdrawInFiduCall__Inputs {
    return new WithdrawInFiduCall__Inputs(this);
  }

  get outputs(): WithdrawInFiduCall__Outputs {
    return new WithdrawInFiduCall__Outputs(this);
  }
}

export class WithdrawInFiduCall__Inputs {
  _call: WithdrawInFiduCall;

  constructor(call: WithdrawInFiduCall) {
    this._call = call;
  }

  get fiduAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawInFiduCall__Outputs {
  _call: WithdrawInFiduCall;

  constructor(call: WithdrawInFiduCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class WritedownCall extends ethereum.Call {
  get inputs(): WritedownCall__Inputs {
    return new WritedownCall__Inputs(this);
  }

  get outputs(): WritedownCall__Outputs {
    return new WritedownCall__Outputs(this);
  }
}

export class WritedownCall__Inputs {
  _call: WritedownCall;

  constructor(call: WritedownCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WritedownCall__Outputs {
  _call: WritedownCall;

  constructor(call: WritedownCall) {
    this._call = call;
  }
}
