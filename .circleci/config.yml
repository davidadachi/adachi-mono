# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  create_concatenated_sol_file:
    description: "Concatenate all sol files into one file. Useful for detecting changes"
    parameters:
      filename:
        type: string
    steps:
      - run:
          name: Combine .sol files
          command: find . -name *.sol -type f | grep -v node_modules | xargs cat > << parameters.filename >>

  create_concatenated_package_lock:
    description: "Concatenate all package-lock.json files recognized by lerna.js into single file. File is used as checksum source for part of caching key."
    parameters:
      filename:
        type: string
    steps:
      - run:
          name: Combine package-lock.json files to single file
          command: find . -name package-lock.json -type f | grep -v node_modules | xargs cat > << parameters.filename >>

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  install:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/node:12.18.3
    resource_class: large
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - create_concatenated_package_lock:
          filename: combined-package-lock.txt
      - restore_cache:
          name: Restore previous build dependency cache
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - deps-v3-{{ checksum "combined-package-lock.txt" }}-{{ .Branch }}-{{ .Revision }}
            - deps-v3-{{ checksum "combined-package-lock.txt" }}-{{ .Branch }}-
            - deps-v3-{{ checksum "combined-package-lock.txt" }}-
            - deps-v3-
      - create_concatenated_sol_file:
          filename: combined-contracts.txt
      - restore_cache:
          name: Restore previous build cache
          keys:
            - contracts-build-cache-{{ checksum "combined-contracts.txt" }}-{{ .Branch }}-{{ .Revision }}
            - contracts-build-cache-{{ checksum "combined-contracts.txt" }}-{{ .Branch }}-
            - contracts-build-cache-{{ checksum "combined-contracts.txt" }}-
            - contracts-build-cache-
      - run:
          name: Update and install build environment dependencies
          command: |
            sudo apt-add-repository universe
            sudo apt-get update
            sudo apt-get install python
      - run:
          name: Install project dependencies
          command: npx lerna bootstrap --no-ci
      - run:
          name: Build protocol and utils
          command: npx lerna run build --scope @goldfinch-eng/protocol --scope @goldfinch-eng/utils
      - save_cache:
          name: Save intra-build dependencies cache
          key: deps-v3-{{ checksum "combined-package-lock.txt" }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - ./node_modules
            - ./packages/autotasks/node_modules/
            - ./packages/protocol/node_modules/
            - ./packages/client/node_modules/
            - ./packages/functions/node_modules/
            - ./packages/server/node_modules/
            - ./packages/subgraph/node_modules/
            - ./packages/utils/node_modules/
            - ./packages/utils/dist
      - save_cache:
          name: Save intra-build contract build cache
          key: contracts-build-cache-{{ checksum "combined-contracts.txt" }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - ./packages/protocol/artifacts
            - ./packages/protocol/cache
            - ./packages/protocol/typechain

  test:
    docker:
      - image: cimg/node:12.18.3
    parallelism: 4
    steps:
      - checkout
      - create_concatenated_package_lock:
          filename: combined-package-lock.txt
      - restore_cache:
          name: Restore intra-build dependencies cache
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - deps-v3-{{ checksum "combined-package-lock.txt" }}-{{ .Branch }}-{{ .Revision }}
      - create_concatenated_sol_file:
          filename: combined-contracts.txt
      - restore_cache:
          name: Restore intra-build contract build cache
          keys:
            - contracts-build-cache-{{ checksum "combined-contracts.txt" }}-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Test
          command: |
            cd packages/protocol
            tests=$(circleci tests glob "test/**/*.test.ts"| grep -v mainnet_forking | circleci tests split --split-by=timings)
            npm run test:unfiltered $tests

  mainnet_forking:
    docker:
      - image: cimg/node:12.18.3
    parallelism: 2
    steps:
      - checkout
      - create_concatenated_package_lock:
          filename: combined-package-lock.txt
      - restore_cache:
          name: Restore intra-build dependencies cache
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - deps-v3-{{ checksum "combined-package-lock.txt" }}-{{ .Branch }}-{{ .Revision }}
      - create_concatenated_sol_file:
          filename: combined-contracts.txt
      - restore_cache:
          name: Restore intra-build contract build cache
          keys:
            - contracts-build-cache-{{ checksum "combined-contracts.txt" }}-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Test
          command: |
            cd packages/protocol
            tests=$(circleci tests glob "test/**/*.test.ts"| grep mainnet_forking | circleci tests split --split-by=timings)
            HARDHAT_FORK=mainnet npm run test:unfiltered $tests
      - run:
          name: Compress hardhat-network-fork cache
          command: cd packages/protocol && tar -cvzf /tmp/hardhat-network-fork.tar.gz cache/hardhat-network-fork
      - store_artifacts:
          path: /tmp/hardhat-network-fork.tar.gz
          destination: hardhat-network-fork.tar.gz

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  protocol:
    jobs:
      - install
      - mainnet_forking:
          requires:
            - install
      - test:
          requires:
            - install
